{"title":"svg-path-properties 1.0.0","contents":"<p>About three years ago now I made <a href=\"https://github.com/rveciana/svg-path-properties\">svg-path-properties</a> while thinking on <a href=\"http://bl.ocks.org/rveciana/bef48021e38a77a520109d2088bff9eb\">drawing labels on isolines on an HTML Canvas element</a>. I didn&#39;t expect that so many people would use it, so it was written quite fast, with some errors. So I re-wrote it in TypeScript, with better explanations and some examples will be added.</p>\n<h2 id=\"version-1\">Version 1.*</h2>\n<p>The new version is written in TypeScript, process that showed me several errors and potential bugs. The API is the same with the difference that now the class can be instantiated using <em>new</em>, while maintaining the former option too. Both options are valid now, although the first one should be used:</p>\n<pre><code>const properties = new path.svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);\nconst properties = path.svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);</code></pre><h2 id=\"how-to-initialize-the-library\">How to initialize the library</h2>\n<h3 id=\"using-it-with-node\">Using it with node</h3>\n<pre><code>const path = require(&quot;svg-path-properties&quot;);\nconst properties = new path.svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);</code></pre><h3 id=\"including-it-from-an-import\">Including it from an import:</h3>\n<pre><code>import { svgPathProperties } from &quot;svg-path-properties&quot;;\nconst properties = new svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);</code></pre><h3 id=\"including-the-script-in-the-browser\">Including the script in the browser</h3>\n<p>Once the script tag has been included,</p>\n<pre><code>const properties = new svgPathProperties.svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);</code></pre><h2 id=\"methods\">Methods</h2>\n<p>First, create ah instance with the svg path as a string:\nconst properties = new path.svgPathProperties(&quot;M0,100 Q50,-50 100,100 T200,100&quot;);</p>\n<p>The total length of the path can be retrieved:</p>\n<pre><code>const length = properties.getTotalLength();</code></pre><p>The position of the path at a given length (in an object of the shape {x: number, y:numebr}) is:</p>\n<pre><code>const point = properties.getPointAtLength(200);</code></pre><p>The tangent method gives the angle of the curve at a given length. Useful to draw labels. The object is the same as in the <em>getPointAtLength</em>:</p>\n<pre><code>const tangent = properties.getTangentAtLength(200);</code></pre><p><em>getPropertiesAtLength</em> returns the point position and the tangent at the same time. Returns an object like {x: number; y: number; tangentX: number; tangentY: number;}:</p>\n<pre><code>const allProperties = properties.getPropertiesAtLength(200);</code></pre><p>This last function returns an array with the different parts of the svg path. The curves can have many functions and it&#39;s difficult to see when is starting one or another. The methods returns an object like:</p>\n<pre><code>PartProperties {\n    start: Point;\n    end: Point;\n    length: number;\n    getPointAtLength(pos: number): Point;\n    getTangentAtLength(pos: number): Point;\n    getPropertiesAtLength(pos: number): PointProperties;\n}\n\nconst parts = properties.getParts();</code></pre><h2 id=\"links\">Links</h2>\n<ul>\n<li><a href=\"https://github.com/rveciana/svg-path-properties\">svg-path-properties library</a></li>\n<li><a href=\"http://bl.ocks.org/rveciana/bef48021e38a77a520109d2088bff9eb\">Drawing labels on isolines on an HTML Canvas element</a></li>\n</ul>\n","tags":["canvas","svg"],"date":"2019-12-07T00:00:00.000Z"}