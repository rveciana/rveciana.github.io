{"title":"Mapping EUROSTAT data with CartoDB","contents":"<p>It&#39;s been a long time since I wanted to learn how to use CartoDB. Everybody around me is using it, even some colleagues are now working there, so I definitely had to know how to use it so I can talk with them!</p>\n<p>I had played a little with it, but without a small challenge it&#39;s difficult to go anywhere. So I&#39;ve made a map with the same EUROSTAT data used in the <a href=\"/d3/2015/09/25/d3-creating-EUROSTAT-maps.html\">previous post</a>. I&#39;m happy with the result, and it&#39;s really a good tool to create nice and useful maps very fast.</p>\n<p>I&#39;ll go really step-by-step (I&#39;m still a rookie), but it&#39;s really straight forward.</p>\n<h2 id=\"obtaining-the-data\">Obtaining the data</h2>\n<p>I wrote how to get the data in the <a href=\"/d3/2015/09/25/d3-creating-EUROSTAT-maps.html\">previous post</a>. To get a ma with CartoDB, merging the data file and the shapefiles is not necessary, since CartoDB can do it for you! So we only need the original <a href=\"http://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units\">NUTS regions shp file</a> and some sample data. We will use again the povertry rate, <a href=\"/d3/2015/09/25/d3-creating-EUROSTAT-maps.html\">learn how to download it</a>. The CSV header must be changed to:</p>\n<p>GEO,GEO(L)/TIME,rate_2010,rate_2011,rate_2012,rate_2013,rate_2014</p>\n<p>If the fields are a number, CartoDB will take the header as data and you will have to remove it later and put names to the columns. It&#39;s better to do it before.</p>\n<p>The shapefile must be in a zip file, since a Shapefile is a set of at least three files, and you can oly upload one at once.</p>\n<h2 id=\"uploading-the-data\">Uploading the data</h2>\n<p>Once you have both files, <em>nuts_rg_01m_2013.zip</em> and <em>povertry_rate.csv</em>, upload them into CartoDB:</p>\n<ul>\n<li>Login to CartoDB (or create an account. I did it directly with my Google account)</li>\n<li>At the main Dashboard, select <em>Your datasets</em> next to your user name at the top left side. Now, you will have something like this:</li>\n</ul>\n<img src=\"/images/other/eurostat-cartodb/upload.png\"/>\n\n<p>If you open the <em>nuts_rg_01m_2013</em> dataset, you will get a table with all the shapefile fields. If you choose the <em>MAP VIEW</em> option, you can get a first view of the Shapefile:</p>\n<img src=\"/images/other/eurostat-cartodb/nuts.png\"/>\n\n<p>Open now the <em>povertry_rate</em> dataset. There is a thing to do here. By default, the fields are all strings, and we want the povertry rates to be floats, since then CartoDB can order and color the values. This image shoes how to do it. We will use the rate_2013 field, since its the one that will match the NUTS file from 2013 and has all the data (unlike the 2014):</p>\n<img src=\"/images/other/eurostat-cartodb/data_type.png\"/>\n\n<h2 id=\"merging-the-datasets\">Merging the datasets</h2>\n<p>There are two options to join both tables. The first one is to use the <em>merge datasets</em> button:</p>\n<img src=\"/images/other/eurostat-cartodb/merge_button.png\"/>\n\n<p>It&#39;s maybe an easiest option, but not very convenient, since it will create a new table with the merged data. If you are using the free CartoDB version, this will make you run out of space very fast. The alternative is creating a good SQL query that joins the two tables dynamically. I&#39;ll explain it in the next section.</p>\n<h2 id=\"creating-the-map\">Creating the map</h2>\n<p>Creating a map is very easy. When you select a <em>dataset</em>, there&#39;s a button to do so. But in our case, we want to change the SQL, so we will create an independent map:</p>\n<p>Go to your account&#39;s maps section:</p>\n<img src=\"/images/other/eurostat-cartodb/maps_section.png\"/>\n\n<p>Then, create a new map. At the <em>sql section</em>, paste the following code:</p>\n<p><pre><code>\n<span class=\"token constant\">SELECT</span> a<span class=\"token punctuation\">.</span>cartodb<span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>id<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>the_geom_webmercator<span class=\"token punctuation\">,</span>\nb<span class=\"token punctuation\">.</span>rate_2013<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>geo_l_time <span class=\"token keyword\">as</span> name\n<span class=\"token constant\">FROM</span> nuts_rg_01m_2013 a<span class=\"token punctuation\">,</span> povertry_rate b\n<span class=\"token constant\">WHERE</span>\nb<span class=\"token punctuation\">.</span>geo <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>nuts_id\n<span class=\"token constant\">AND</span> a<span class=\"token punctuation\">.</span>stat_levl<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n</code></pre></p>\n<ul>\n<li>Note that the <em>SELECT</em> is a regular PosgreSQL/PostGIS query</li>\n<li>At the <em>FROM</em> part of the query I&#39;ve selected the two datasets</li>\n<li><em>a.cartodb_id</em> is necessary to make queries over the map (<em>onclick</em> and <em>onmouseover</em>)</li>\n<li><em>a.the_geom_webmercator</em> is necessary to get the geometries from the <em>nuts_rg_01m_2013</em> dataset. When joining two tables, CartoDB needs to know which is the geometry column from the result</li>\n<li>The other selected fields are the name and the povertry rate, necessary to put colors and create the <em>onclick</em> queries</li>\n<li>The <em>WHERE</em> section joins both tables and selects only the countries (NUTS0, stored at the <em>stat<em>levl</em></em> field)</li>\n</ul>\n<img src=\"/images/other/eurostat-cartodb/sql_section.png\"/>\n\n<h2 id=\"formatting-the-map\">Formatting the map</h2>\n<p>Now, we only have to format the map a little. The first thing, let&#39;s create a choropleth map. Just put the settings as in the following image:</p>\n<img src=\"/images/other/eurostat-cartodb/colours.png\"/>\n\n<p>This will color the map, but with the intervals set automatically. It&#39;s a nice start, but the intervals aren&#39;t the best ones. To change it, just change the <em>css</em> section:</p>\n<img src=\"/images/other/eurostat-cartodb/colours.png\"/>\n\n<p>You can change the scale at the <em>scale section</em> under the <em>css section</em>. Finally, activate the <em>onclick</em> behaviour:</p>\n<img src=\"/images/other/eurostat-cartodb/click.png\"/>\n\n<h2 id=\"the-result\">The result</h2>\n<p>At the top right corner, you can find how to publish the new map. Here you have the result:</p>\n<iframe width=\"100%\" height=\"520\" frameborder=\"0\" src=\"https://rveciana.cartodb.com/viz/5a239902-9074-11e5-a3da-0ecd1babdde5/embed_map\" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\n\n<p>Once done the first time, creating new maps is really easy. I&#39;m impressed with it!</p>\n<h2 id=\"links\">Links</h2>\n<ul>\n<li><a href=\"/d3/2015/09/25/d3-creating-EUROSTAT-maps.html\">Mapping EUROSTAT data with D3js</a></li>\n<li><a href=\"http://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units\">Download the NUTS regions file</a></li>\n<li><a href=\"http://docs.cartodb.com/\">CartoDB docs</a></li>\n<li><a href=\"http://docs.cartodb.com/cartodb-editor/\">CartoDB editor docs</a></li>\n</ul>\n","tags":["EUROSTAT","Open Data","CartoDB"],"date":"2015-11-30T00:00:00.000Z"}