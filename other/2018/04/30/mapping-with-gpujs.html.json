{"title":"Mapping with gpu.js","contents":"<p><a href=\"http://gpu.rocks\">gpu.js</a> is a JavaScript Acceleration library for <a href=\"https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units\">GPGPU (General purpose computing on GPUs)</a> in Javascript. This means, basically, using the GPU instead of the CPU for the calculations, and coding in simple JavaScript.</p>\n<p>The library is awesome, but I found some issues trying to run my things, so I will try to put all my steps here, which will help me in first place.</p>\n<h2 id=\"including-the-library\">Including the library</h2>\n<p>From a regular web page, just include:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/path/to/js/gpu.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n\n</code></pre></p>\n<p>then, initialize the library calling</p>\n<p><pre><code>\n<span class=\"token keyword\">const</span> gpu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></p>\n<p>It&#39;s possible to pass to the GPU constructor the options:</p>\n<pre><code>{mode: &#39;gpu&#39;} or {mode: &#39;cpu&#39;}</code></pre><p>Setting it forces the use of the CPU, which can be nice for performance comparison.</p>\n<p>Using node, just install it with:</p>\n<pre><code>npm install gpu.js</code></pre><p>And require the module with:</p>\n<pre><code>const gpujs = require(&quot;gpu.js&quot;);\nconst gpu = new gpujs();</code></pre><h3 id=\"observablehq\">ObservableHQ</h3>\n<p><a href=\"https://observablehq.com\">ObservableHQ</a> is a new and awesome site to publish interactive examples. Requiring libraries is possible, but they have to be in UMD or AMD, which is not the case of <a href=\"http://gpu.rocks\">gpu.js</a>. A working solution is using the <a href=\"https://wzrd.in/\">wzrd</a> service</p>\n<p><pre><code>\n<span class=\"token constant\">GPU</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"https://wzrd.in/standalone/gpu.js&amp;#39;\"</span><span class=\"token operator\">></span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>wzrd<span class=\"token punctuation\">.</span>in<span class=\"token operator\">/</span>standalone<span class=\"token operator\">/</span>gpu<span class=\"token punctuation\">.</span>js<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n</code></pre></p>\n<h2 id=\"first-working-example\">First working example</h2>\n<p>Let&#39;s see the simplest calculation using node:</p>\n<p><pre><code>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">GPU</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gpu.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> gpu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> gpuKernel <span class=\"token operator\">=</span> gpu<span class=\"token punctuation\">.</span><span class=\"token function\">createKernel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">gpuKernel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></p>\n<ul>\n<li>After initializing the class, a kernel is created with <em>createKernel</em><ul>\n<li>The function that calculates every point is passed as the parameter\nThis function has the <em>this.thread.x, this.thread.y and this.thread.z</em> variables that return the position in the matrix to calculate</li>\n<li>In the <em>setOutput</em> method, the size of the matrix is set</li>\n</ul>\n</li>\n<li>Just call the created kernel to calculate the values</li>\n</ul>\n<p>Some more things about this functions:</p>\n<ul>\n<li><p>They can take array arguments</p>\n<p>function(points){...}</p>\n</li>\n</ul>\n<p>and call it</p>\n<p>gpuKernel([1,2,3])</p>\n<ul>\n<li>The size of the matrix is not accessible, unless a constant is declared</li>\n</ul>\n<p><pre><code>\n<span class=\"token keyword\">var</span> gpuKernel <span class=\"token operator\">=</span> gpu<span class=\"token punctuation\">.</span><span class=\"token function\">createKernel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>xSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">setConstants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>xSize<span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> ySize<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></p>\n<ul>\n<li>The JavaScript operators that can be called inside the kernel functions are quite limited. <a href=\"https://github.com/gpujs/gpu.js?utm_source=recordnotfound.com#supported-math-functions\">Here&#39;s the list</a>. Also, no <em>console.log</em> and many other functions can go there.</li>\n</ul>\n<h2 id=\"drawing-directly-on-a-canvas\">Drawing directly on a Canvas</h2>\n<p>One of the points that make <a href=\"http://gpu.rocks\">gnu.js</a> really interesting is that the gpu function can draw directly on a Canvas element, which is what we need when mapping. Here&#39;s a simple example, to run directly on the browser:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"gpu.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> gpu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> render <span class=\"token operator\">=</span> gpu<span class=\"token punctuation\">.</span><span class=\"token function\">createKernel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">/</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token operator\">/</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setGraphical</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> render<span class=\"token punctuation\">.</span><span class=\"token function\">getCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>body<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre></p>\n<ul>\n<li>The method <em>setGraphical(true)</em> has to be called to make the kernel draw on a Canvas. The <em>setOutput</em> method will set now the Canvas size</li>\n<li>Later, get the Canvas with <em>getCanvas()</em></li>\n<li>Inside the function, set the <em>this.color</em> field with four values (rgba) from 0 to 1</li>\n<li>The y axis goes bottom to top! This is the opposite of the usual notation</li>\n</ul>\n<p>It&#39;s easy! The result looks like this:</p>\n<img src=\"/images/other/gpujs-mapping/result1.png\"/>\n\n<h2 id=\"some-algorithms\">Some algorithms</h2>\n<h3 id=\"inverse-of-the-distance\">Inverse of the distance</h3>\n<p>In <a href=\"http://geoexamples.blogspot.com.es/2012/05/creating-grid-from-scattered-data-using.html\">one of the first posts of this blog</a> I made a python script for drawing a grid from a set of scattered points. Using gpu.js this can be done at real-time and see the results when changing the parameters, as in <a href=\"https://beta.observablehq.com/@rveciana/most-basic-gpu-js-example\">this ObservableHQ notebook</a></p>\n<p>The function to calculate the values is:\n<pre><code>\n<span class=\"token function-variable function\">invDist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> smoothing<span class=\"token punctuation\">,</span> colorScale</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> nominator<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> denominator<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> flagDist <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>numPoints<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> dist <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>xpos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>xpos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>ypos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>ypos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> smoothing<span class=\"token operator\">*</span>smoothing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnominator<span class=\"token operator\">=</span>nominator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>dist<span class=\"token punctuation\">)</span>\ndenominator<span class=\"token operator\">=</span>denominator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span>dist<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dist <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\nflagDist <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flagDist <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>flagDist<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> nominator<span class=\"token operator\">/</span>denominator<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">*</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span>colorScale<span class=\"token punctuation\">[</span>c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> colorScale<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> colorScale<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></p>\n<ul>\n<li>We only iterate the points, but not hte pixels, referenced by <em>this.thread.x</em> and <em>this.thread.y</em>, that will be done in parallel</li>\n</ul>\n<h3 id=\"hillshade\">Hillshade</h3>\n<p>The hillshade algorithm depends on the current pixel and the one around it, so it&#39;s possible <a href=\"https://beta.observablehq.com/@rveciana/shaded-relief-with-gpujs-and-d3js\">to use gpu.js easily</a>:</p>\n<p><pre><code>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hillshade</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">demData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">let</span> azimuthrad <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>azimuth _ <span class=\"token number\">0.017453292519943295</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> altituderad <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>angleAltitude _ <span class=\"token number\">0.017453292519943295</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> gradX<span class=\"token punctuation\">,</span> gradY<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> yPos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>ySize <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> gradX <span class=\"token operator\">=</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>xSize<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> gradX <span class=\"token operator\">=</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> gradX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>yPos<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> gradY <span class=\"token operator\">=</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>yPos<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>ySize<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> gradY <span class=\"token operator\">=</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> gradY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>demData<span class=\"token punctuation\">[</span>yPos<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>demData<span class=\"token punctuation\">[</span>yPos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> demData<span class=\"token punctuation\">[</span>yPos<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> slope <span class=\"token operator\">=</span> <span class=\"token number\">3.141593</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>gradX<span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>gradX <span class=\"token operator\">+</span> gradY<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>gradY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> aspect <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>gradY<span class=\"token punctuation\">,</span> gradX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//should be atan2, but not working!</span>\n\n<span class=\"token keyword\">let</span> hs<span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>value <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>altituderad<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>slope<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>altituderad<span class=\"token punctuation\">)</span> _ Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>slope<span class=\"token punctuation\">)</span> \\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>azimuthrad <span class=\"token operator\">-</span> aspect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span>hs_value<span class=\"token punctuation\">,</span> hs_value<span class=\"token punctuation\">,</span> hs_value<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></p>\n<ul>\n<li>If you compare it with the <a href=\"https://beta.observablehq.com/@rveciana/shaded-relief\">original hillshade example</a>, the main difference is that no <em>for loops</em> have to be used to calculate all the pixel values. Instead, the <em>this.thread.x</em> and <em>this.thread.y</em> variables are used, and all the points will be done at once.</li>\n<li>Note that <em>Math.atan</em> is used instead of <em>Math.atan2</em>. This is because the <em>GSLS</em> functions have to be used instead of the ones in JavaScript. All the available functions are <a href=\"http://www.shaderific.com/glsl-functions/\">referenced in their docs</a></li>\n</ul>\n<h2 id=\"using-it-with-leaflet\">Using it with Leaflet</h2>\n<p>Until now, the examples don&#39;t show an easy way to put a map on the result. A nice option is using Leaflet. Since gpu.js returns a canvas element and Leaflet has the possibility to show it, merging both is not difficult.\nI&#39;m using <a href=\"https://gist.github.com/Sumbera/11114288\">a small class called canvasOverlay</a>.</p>\n<p>As you can see in <a href=\"https://beta.observablehq.com/@rveciana/leaflet-gpu-js-canvas\">this observable</a>, the function to call from the canvasOverlay would be like:\n<pre><code>\n<span class=\"token function-variable function\">drawCanvas</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvasOverlay<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">let</span> canvas <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> context <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token number\">2</span>d<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontext<span class=\"token punctuation\">.</span>globalAlpha <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> gl <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>webgl2<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>premultipliedAlpha<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> gpu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\ncanvas<span class=\"token punctuation\">,</span>\nwebGl<span class=\"token operator\">:</span> gl\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> krender <span class=\"token operator\">=</span> gpu<span class=\"token punctuation\">.</span><span class=\"token function\">createKernel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> colorScale</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span><span class=\"token keyword\">var</span> nominator<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> denominator<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> flagDist <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>constants<span class=\"token punctuation\">.</span>numPoints<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> dist <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>xpos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>xpos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>ypos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">.</span>y<span class=\"token operator\">-</span>ypos<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nominator<span class=\"token operator\">=</span>nominator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>dist<span class=\"token punctuation\">)</span>\n        denominator<span class=\"token operator\">=</span>denominator<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span>dist<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dist <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            flagDist <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flagDist <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>flagDist<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> nominator<span class=\"token operator\">/</span>denominator<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">*</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span>colorScale<span class=\"token punctuation\">[</span>c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> colorScale<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> colorScale<span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> c<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">setConstants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> numPoints<span class=\"token operator\">:</span> points<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">setDebug</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">setGraphical</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> xPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> yPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\npoints<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\nvalues<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> coords <span class=\"token operator\">=</span> canvasOverlay<span class=\"token punctuation\">.</span>_map<span class=\"token punctuation\">.</span><span class=\"token function\">latLngToContainerPoint</span><span class=\"token punctuation\">(</span>\n<span class=\"token constant\">L</span><span class=\"token punctuation\">.</span><span class=\"token function\">latLng</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">.</span>lon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxPos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nyPos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>coords<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">krender</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> csImageData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> krender<span class=\"token punctuation\">.</span><span class=\"token function\">getCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontext<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></p>\n<ul>\n<li>Get the gpujs canvas with <em>getCanvas()</em></li>\n<li>Draw in in the leaflet canvas with <em>context.drawImage(result, 0, 0)</em></li>\n</ul>\n<h2 id=\"links\">Links</h2>\n<ul>\n<li><a href=\"http://gpu.rocks\">The gpu.js web site</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units\">GPGPU Wikipedia page</a></li>\n<li><a href=\"https://observablehq.com\">ObservableHQ</a></li>\n<li><a href=\"https://wzrd.in/\">wzrd.in</a></li>\n<li><a href=\"https://hackernoon.com/introducing-gpu-js-gpu-accelerated-javascript-ba11a6069327\">generateMatrices source</a></li>\n<li><a href=\"https://github.com/gpujs/gpu.js?utm_source=recordnotfound.com#supported-math-functions\">List of gpu.js supported math functions</a></li>\n<li><a href=\"http://geoexamples.blogspot.com.es/2012/05/creating-grid-from-scattered-data-using.html\">Creating a grid from scattered data using inverse of the distance with python (gdal_grid approach)</a></li>\n<li><a href=\"https://gist.github.com/Sumbera/11114288\">canvasOverlay</a></li>\n<li><a href=\"http://www.shaderific.com/glsl-functions/\">GSLS functions reference</a></li>\n</ul>\n<h3 id=\"observablehq-notebooks\">ObservableHQ notebooks</h3>\n<ul>\n<li><a href=\"https://beta.observablehq.com/@rveciana/most-basic-gpu-js-example\">Most basic gpu.js example</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/gpu-js-check-execution-time\">Most basic gpu.js example with performance test</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/basic-gpu-js-canvas-example\">Basic gpu.js canvas example</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/inverse-of-the-distance-with-gpu-js\">Inverse of the distance with gpu.js</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/shaded-relief-with-gpujs-and-d3js\">Shaded relief with gpu.js and d3.js</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/shaded-relief-with-gpujs-and-d3js/2\">Shaded relief with gpu.js drawing the canvas directly</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/shaded-relief\">Shaded relief without gpu.js</a></li>\n<li><a href=\"https://beta.observablehq.com/@rveciana/leaflet-gpu-js-canvas\">Leaflet + inverse of the distance</a></li>\n</ul>\n<h3 id=\"blocks-with-some-of-the-examples\">Blocks with some of the examples</h3>\n<ul>\n<li><a href=\"https://bl.ocks.org/rveciana/c664dffd8b94f0598543958433d415f4\">Basic gpu.js canvas example</a></li>\n<li><a href=\"https://bl.ocks.org/rveciana/7419081f8931227769bae5255579e792\">Inverse of the distance with gpu.js</a></li>\n</ul>\n","tags":["GPU","gpujs","canvas"],"date":"2018-04-30T00:00:00.000Z"}