{"title":"Using RxPY to process GIS files dependencies","contents":"<p><a href=\"http://reactivex.io/\">Reactive programming</a> is amazing. Hard to understand when you first see it, it solves problems that are really difficult to code without it. It&#39;s available in many languages and very well-known by AngularJS users, because it makes an extensive use of it. </p>\n<h1 id=\"the-problem\">The problem</h1>\n<p>Let&#39;s see what&#39;s reactive programming before seeing a &quot;real&quot; use case. The easiest way to define it (for me) is comparing it to an Excel file:\n<img src=\"/images/python/rxpy/spreadsheet.png\" /></p>\n<ul>\n<li>The first two columns are independent values</li>\n<li>Columns C and D depend on A and B</li>\n<li>Column E depends on column D</li>\n<li>Note that some columns are <em>subscribed</em> to other columns and that all any column can be <em>subscribed</em> by others. </li>\n<li>Values in E depend on D, which depends on A and B, but E doesn&#39;t know or better, doesn&#39;t care about this. <ul>\n<li>You can change the formula for D and E will still work.</li>\n</ul>\n</li>\n</ul>\n<p>Let&#39;s imagine a GIS example now. <a href=\"https://github.com/meteocat/pypros\">pypros</a> is a software I contributed in some time ago when working at the Catalan Meteorological Service. </p>\n<p>Basically, it takes the temperature field, the relative humidity (or dew point temperature), the radar signal and outputs a file where each pixel has a value depending on the type of precipitation. You can <a href=\"https://www.meteo.cat/observacions/plujaONeu\">see it in action here</a>.</p>\n<img src=\"/images/python/rxpy/flow.png\" />\n\n<ul>\n<li>With temperature and the Dew point, we get what would happen if there was precipitation in a given point</li>\n<li>With the previous result and the radar image, we can get the final product</li>\n<li>The main problem to code this is that the frequencies aren&#39;t equal for all the fields, so coding it directly means remembering the latest processed images and so on</li>\n<li>Complicating the diagram is easy with reactive programming because each step will be watching only the interesting observables</li>\n</ul>\n<h1 id=\"the-code\">The code</h1>\n<p>As usual, you can <a href=\"https://github.com/rveciana/rxpyexample\">get the code at GitHub</a>.</p>\n<p>So the first thing to do is act when some file appears. The file could be a temperature, dew point or radar file. To do it, we&#39;ll use the <a href=\"https://python-watchdog.readthedocs.io/en/stable/\"><em>watchdog</em> library</a></p>\n<p><pre><code><span class=\"token keyword\">import</span> time\nfrom watchdog<span class=\"token punctuation\">.</span>events <span class=\"token keyword\">import</span> FileSystemEventHandler\nfrom watchdog<span class=\"token punctuation\">.</span>observers <span class=\"token keyword\">import</span> Observer\nfrom observables <span class=\"token keyword\">import</span> source\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span>FileSystemEventHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    def <span class=\"token function\">next_source</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">on_next</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n    def <span class=\"token function\">on_created</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">next_source</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>src_path<span class=\"token punctuation\">)</span>\n    def <span class=\"token function\">on_modified</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">next_source</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>src_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token operator\">:</span>\n    path <span class=\"token operator\">=</span> <span class=\"token string\">'./data'</span>\n    event_handler <span class=\"token operator\">=</span> <span class=\"token function\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    observer <span class=\"token operator\">=</span> <span class=\"token function\">Observer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    observer<span class=\"token punctuation\">.</span><span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span>event_handler<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> recursive<span class=\"token operator\">=</span>True<span class=\"token punctuation\">)</span>\n    observer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">while</span> True<span class=\"token operator\">:</span>\n            time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    finally<span class=\"token operator\">:</span>\n        observer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        observer<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></p>\n<ul>\n<li>The <em>Observer</em> object will call the methods in <em>MyHandler</em> when some change occurs in the path</li>\n<li><em>source</em> is the RxPY thing that we&#39;ll see next. When something changes, the <em>on_next</em> method is called with the path for the file that changed</li>\n</ul>\n<p>Let&#39;s see now a first version of the <em>RxPY</em> part\n<pre><code><span class=\"token keyword\">import</span> time\nfrom os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">import</span> basename\nfrom pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">import</span> rx\nfrom rx <span class=\"token keyword\">import</span> operators <span class=\"token keyword\">as</span> ops\nfrom rx<span class=\"token punctuation\">.</span>subject <span class=\"token keyword\">import</span> Subject\n\ndef <span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">process_potential_ros</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATING POTENTIAL ROS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./data/pot_pon_'</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/pot_ros_'</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">process_ros</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATING ROS FILE\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./data/pon_'</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/ros_'</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsource <span class=\"token operator\">=</span> <span class=\"token function\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntd <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntemp <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'temp'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nradar <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'radar'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npot_ros <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pot_ros'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nrx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>process_potential_ros<span class=\"token punctuation\">)</span>\nrx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>pot_ros<span class=\"token punctuation\">,</span> radar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>process_ros<span class=\"token punctuation\">)</span>\n</code></pre></p>\n<ul>\n<li>The first functions are just mock functions that simulate the creation of the actual files. That&#39;s why the <em>time.sleep()</em> is there</li>\n<li><em>source</em> is a <em>Subject</em>, that can recieve the <em>on_next</em> method and be subscribed. Basically, whan any file changes, the <em>source</em> will emit its path</li>\n<li>The next lines are <em>observables</em> subscribed to source. They filter the path so they will only emit when the string appears in the path. To when a temperature file appears, the path is emitted by <em>temp</em></li>\n<li>Finally, <em>combine_latest</em> takes two observables and emits an event with the latest values for each one. You can <a href=\"https://rxmarbles.com/#combineLatest\">check the diagram here</a><ul>\n<li>The first one creates the <em>potential RoS</em> file that will trigger the <em>source</em> again, because it creates a file</li>\n<li>The second one takes the previpusly created file and the radar to create the final image</li>\n</ul>\n</li>\n</ul>\n<p>The output is something similar to:\n<pre><code>\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">POTENTIAL</span> <span class=\"token constant\">ROS</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pot_pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010000.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010000.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010006.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010012.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010018.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010024.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010030.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010036.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010042.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010048.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010054.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010100.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">POTENTIAL</span> <span class=\"token constant\">ROS</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pot_pon_202101010100<span class=\"token operator\">-</span><span class=\"token number\">202101010000.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">POTENTIAL</span> <span class=\"token constant\">ROS</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pot_pon_202101010100<span class=\"token operator\">-</span><span class=\"token number\">202101010100.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010106.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010000<span class=\"token operator\">-</span><span class=\"token number\">202101010106.</span>tiff\n<span class=\"token constant\">CREATING</span> <span class=\"token constant\">ROS</span> <span class=\"token constant\">FILE</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>pon_202101010100<span class=\"token operator\">-</span><span class=\"token number\">202101010106.</span>tiff \n</code></pre></p>\n<p>To do it, I created a file that generates radar and temperature and td files like this:</p>\n<p><pre><code>from pathlib <span class=\"token keyword\">import</span> Path\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/temp-202101010000.tiff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/radar-202101010000.tiff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/td-202101010000.tiff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/radar-202101010006.tiff'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span>\n</code></pre></p>\n<h1 id=\"improving-the-code-by-using-more-rxpy\">Improving the code by using more RxPY</h1>\n<p>The previous code has three problems (at least)</p>\n<ol>\n<li>The <em>Potential Rain Or Snow</em> is saved in a file. This is not wring but it&#39;s an intermediate step and maybe we don&#39;t want to save it</li>\n<li>There are two <em>Potential Rain Or Snow</em> created at the end. This is because <em>combine_latest</em> will emit twice when eiter Td or Temperature appear. Usually, we only want this to be created if the dates for both files are identical (they should appear more or less at the same time)</li>\n<li><em>time.sleep()</em> will block the process. If the file generation lasts a lot, some events will have to wait. It would be much nicer if this calculation happens in another process and when is finished, emits the event (or saves the file)</li>\n</ol>\n<p>To solve the first point, we&#39;ll use <em>map</em>, that converts the input value to another thing, as in functional programming:</p>\n<p><pre><code>pot_ros <span class=\"token operator\">=</span> rx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>create_pot_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></p>\n<p>Then, when subscribing to the <em>pot_ros observable</em> we could receive the calculated field (calculated in <em>create_pot_data</em>) without having to save</p>\n<p>To avoid <em>create_pot_data</em> to be run twice when <em>td</em> and <em>temperature</em> are different, a filter can be used:</p>\n<p><pre><code>pot_ros <span class=\"token operator\">=</span> rx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda values<span class=\"token operator\">:</span> <span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>create_pot_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></p>\n<p>This way, only the elements that match the filter function will pass to the map.</p>\n<p>Finally, to solve the process blocking, we can add a <em>ops.subscribe_on(thread_pool_scheduler)</em>. This will make each subscription to run in a different process. I added a long sleep time to the file creation to show that in the same pipe, everything i in the same process. Probably this can be avoided with<a href=\"https://rxpy.readthedocs.io/en/latest/get_started.html\"><em>flat_map</em> and <em>from_future</em></a>, but I&#39;m not sure that it&#39;s a nice feature in a real case.</p>\n<p><pre><code><span class=\"token keyword\">import</span> multiprocessing\n<span class=\"token keyword\">import</span> time\nfrom os<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">import</span> basename\nfrom pathlib <span class=\"token keyword\">import</span> Path\n\n<span class=\"token keyword\">import</span> rx\nfrom rx <span class=\"token keyword\">import</span> operators <span class=\"token keyword\">as</span> ops\nfrom rx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>typing <span class=\"token keyword\">import</span> Observable\nfrom rx<span class=\"token punctuation\">.</span>scheduler <span class=\"token keyword\">import</span> ThreadPoolScheduler\nfrom rx<span class=\"token punctuation\">.</span>subject <span class=\"token keyword\">import</span> Subject\n\nthread_count <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span><span class=\"token function\">cpu_count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nthread_pool_scheduler <span class=\"token operator\">=</span> <span class=\"token function\">ThreadPoolScheduler</span><span class=\"token punctuation\">(</span>thread_count<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cpu count is : {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>thread_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">process_ros</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    fut <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span><span class=\"token function\">create_task</span><span class=\"token punctuation\">(</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    def <span class=\"token function\">when_finished</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>fut<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATING ROS FILE\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data/ros&lt;/em>'</span><span class=\"token operator\">+</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".tiff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">touch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    fut<span class=\"token punctuation\">.</span><span class=\"token function\">add_done_callback</span><span class=\"token punctuation\">(</span>when_finished<span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">create_pot_data</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATING POT ROS DATA\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nsource <span class=\"token operator\">=</span> <span class=\"token function\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntd <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe_on</span><span class=\"token punctuation\">(</span>thread_pool_scheduler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntemp <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'temp'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe_on</span><span class=\"token punctuation\">(</span>thread_pool_scheduler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nradar <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda text<span class=\"token operator\">:</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'radar'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\npot_ros <span class=\"token operator\">=</span> rx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>lambda values<span class=\"token operator\">:</span> <span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">get_date</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>create_pot_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ops<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe_on</span><span class=\"token punctuation\">(</span>thread_pool_scheduler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrx<span class=\"token punctuation\">.</span><span class=\"token function\">combine_latest</span><span class=\"token punctuation\">(</span>pot_ros<span class=\"token punctuation\">,</span> radar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>process_ros<span class=\"token punctuation\">,</span> scheduler<span class=\"token operator\">=</span>thread_pool_scheduler<span class=\"token punctuation\">)</span>\n</code></pre></p>\n<h1 id=\"links\">Links</h1>\n<ul>\n<li><a href=\"https://github.com/rveciana/rxpyexample\">Post code on GitHub</a></li>\n<li><a href=\"http://reactivex.io/\">ReactiveX</a></li>\n<li><a href=\"https://github.com/meteocat/pypros\">PyPROS, precipitation type calculation: rain or snow</a></li>\n<li><a href=\"https://www.meteo.cat/observacions/plujaONeu\">Rain or snow operative output</a></li>\n<li><a href=\"https://python-watchdog.readthedocs.io/en/stable/\">Watchdog library</a></li>\n<li><a href=\"https://rxmarbles.com/\">Rx Marbles site</a></li>\n<li><a href=\"https://rxmarbles.com/#combineLatest\"><em>combine_latest</em> diagram</a></li>\n<li><a href=\"https://stackoverflow.com/questions/43989153/how-to-wait-for-rxpy-parallel-threads-to-complete\">RxPY parallel threads</a></li>\n<li><a href=\"https://rxpy.readthedocs.io/en/latest/get_started.html\"><em>from_future</em> example</a></li>\n</ul>\n","tags":["RxPy"],"date":"2021-10-12T00:00:00.000Z","thumbnail":"/images/python/rxpy/twitter.png"}