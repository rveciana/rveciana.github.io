{"title":"Mapping with Svelte and Konva","contents":"<p>After some attempts <a href=\"https://geoexamples.com/other/2019/12/08/mapping-svelte.html\">mapping with Svelte</a>, I missed using canvas instead of SVG. SVG has the advantage that integrates very well with Svelte, since it&#39;s an XML and the nodes can be managed as if they were HTML. On the other hand, Canvas is more efficient, but it has to be generated entirely with JavaScript.</p>\n<p>At the same time, I found <a href=\"https://konvajs.org/\">Konva</a>, a promising library to draw Canvas elements and make them interactive in an easy way. It allows animations, Drag and Drop, actions, filters, etc. so it&#39;s possible to do the same things as in SVG. I didn&#39;t find any example of Konva for drawing maps, so here we&#39;ll find a declarative way to do it, using Svelte.</p>\n<h1 id=\"using-konva-with-svelte\">Using Konva with Svelte</h1>\n<p>Let&#39;s see first how to plot <em>something</em> using Konva and Svelte. <a href=\"https://svelte.dev/repl/75082b2a3383482d969f99b509f9b7a4?version=3.24.1\">You can check the source code at Svelte REPL</a>. Be patient, since it has to load the npm modules!</p>\n<p>The code here is short, and we have only one component:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>onMount<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> stage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Stage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        container<span class=\"token operator\">:</span> container<span class=\"token punctuation\">,</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Layer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> simpleText <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'Hello Konva'</span><span class=\"token punctuation\">,</span>\n        fontSize<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        fontFamily<span class=\"token operator\">:</span> <span class=\"token string\">'Calibri'</span><span class=\"token punctuation\">,</span>\n        fill<span class=\"token operator\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        layer<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>simpleText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stage<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>div bind<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>container<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n\n<ul>\n<li>Note how the <em>div</em> container is binded to the variable</li>\n<li>Since the component has to be binded, we&#39;ll have to wait until the component is mounted to create the Konva elements</li>\n<li>Konva needs a <em>Stage</em> (cimilar to the Canvas element), one or more <em>Layer</em>, where you can actually draw the objects, and any shape, text or whatever we want to draw.</li>\n</ul>\n<h1 id=\"konva-as-svelte-components\">Konva as Svelte components</h1>\n<p>The example is not bad, but it&#39;s not using any Svelte style coding. It would be cool declaring things like:\n\n<Stage>\n<Layer>\n<Element x=100 y=100/>\n<Layer>\n</Stage>\n</p>\n<p>Then, we could use a store to put as many elements as we wanted, for instance. Let&#39;s see how to to that. <a href=\"https://svelte.dev/repl/db922f45dff8483082e18d6555ad5b50?version=3.24.1\">Check the interactive example here</a></p>\n<img src=\"/images/svelte/svelte-konva-mapping/circles.png\"/>\n\n<p>We&#39;ll create a component for the Stage, another for the Layer and finally, a Circle component that acually draws a circle.</p>\n<p>The Stage component is like this:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onMount<span class=\"token punctuation\">,</span> setContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">getStage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> stage\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> stage<span class=\"token punctuation\">;</span> \n    <span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n     stage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Stage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        container<span class=\"token operator\">:</span> container<span class=\"token punctuation\">,</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>pre<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>div bind<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>#<span class=\"token keyword\">if</span> container<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>slot<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pre<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n</code></pre>\n\n<ul>\n<li>As in the other case, you&#39;ll see that we need to create the node where we&#39;ll add all the stuff, plus the binding.</li>\n<li>The slot will allow us to add children components. Layers in this case.</li>\n<li>We create a context. This way, the Layer component will have access to the <em>Konva stage</em> object without passing it in the props. Since this component won&#39;t be touched when creating new drawings, it&#39;s much cleaner.</li>\n</ul>\n<p>Then the Layer component:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getContext<span class=\"token punctuation\">,</span> setContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getStage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva_layer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">getLayer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> layer\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> stage <span class=\"token operator\">=</span> <span class=\"token function\">getStage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Layer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    stage<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n\n<span class=\"token operator\">&lt;</span>slot<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>slot<span class=\"token operator\">></span>\n</code></pre></p>\n<ul>\n<li>This one is much simpler, since we don&#39;t have to create HTML elements.</li>\n<li>We create another context for the layer, so its children can have access to it.</li>\n</ul>\n<p>Finally, the Circle component is:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getContext<span class=\"token punctuation\">,</span> onDestroy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> fill <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> stroke <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> strokeWidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getLayer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva_layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token function\">getLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span>\n        y<span class=\"token operator\">:</span> y<span class=\"token punctuation\">,</span>\n        radius<span class=\"token operator\">:</span> r<span class=\"token punctuation\">,</span>\n        fill<span class=\"token operator\">:</span> fill<span class=\"token punctuation\">,</span>\n        stroke<span class=\"token operator\">:</span> stroke<span class=\"token punctuation\">,</span>\n        strokeWidth<span class=\"token operator\">:</span> strokeWidth<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>circle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> circle<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n\n</code></pre></p>\n<ul>\n<li>We export most of the parameters so they can be used as props, although they have a default value</li>\n<li>We have to call <em>layer.draw()</em> or the object won&#39;t be drawn. That&#39;s because we are creating it before the layer is added into the stage.</li>\n<li>We have to destroy the object on deleting the component, or we&#39;ll have memory leaks. Think if we had hundreds of circles appearing and disappearing when a store value changes...</li>\n</ul>\n<p>And now the cool part. To create the drawing, we only call:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>Stage<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Layer<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Circle x<span class=\"token operator\">=</span><span class=\"token number\">100</span> y<span class=\"token operator\">=</span><span class=\"token number\">100</span> r<span class=\"token operator\">=</span><span class=\"token number\">23</span> fill<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span> strokeWidth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Circle x<span class=\"token operator\">=</span><span class=\"token number\">200</span> y<span class=\"token operator\">=</span><span class=\"token number\">200</span> r<span class=\"token operator\">=</span><span class=\"token number\">13</span> fill<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span> strokeWidth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layer<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Stage<span class=\"token operator\">></span>\n</code></pre></p>\n<h1 id=\"creating-a-map\">Creating a map</h1>\n<p>So now, with the knowledge from the previous examples, we can create a map. <a href=\"https://svelte.dev/repl/7c3e009c6f82414aa011a313b76a5eeb?version=3.24.1\">I created an intermediate (simpler) version of the map, in case somebody wants to take a look</a>. <a href=\"https://svelte.dev/repl/8f38e2c895284c13a3e3f534d01dd171?version=3.24.1\">The final version is here</a>.</p>\n<img src=\"/images/svelte/svelte-konva-mapping/map.png\"/>\n\n<p>Let&#39;s start from the other side now! The App.svelte file is this one:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>onMount<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> Stage <span class=\"token keyword\">from</span> <span class=\"token string\">'./Stage.svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> Layer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Layer.svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> Marker <span class=\"token keyword\">from</span> <span class=\"token string\">'./Marker.svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> BackgroundMap <span class=\"token keyword\">from</span> <span class=\"token string\">'./BackgroundMap.svelte'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./store.js'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> message_value<span class=\"token punctuation\">;</span>\n    message<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        message_value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>Stage<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Layer<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>BackgroundMap <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layer<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Layer<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Marker lon<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">43.1</span> lat<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">22.9068</span> fill<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span> markerMessage<span class=\"token operator\">=</span><span class=\"token string\">\"Marker: Rio de Janeiro\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Marker lon<span class=\"token operator\">=</span><span class=\"token number\">2</span> lat<span class=\"token operator\">=</span><span class=\"token number\">41</span> fill<span class=\"token operator\">=</span><span class=\"token string\">\"green\"</span> markerMessage<span class=\"token operator\">=</span><span class=\"token string\">\"Marker: Barcelona\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Layer<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Stage<span class=\"token operator\">></span>\n\n\n    <span class=\"token punctuation\">{</span>message_value<span class=\"token punctuation\">}</span>\n\n</code></pre>\n\n<ul>\n<li>We are using a <em>BackgroundMap</em> component and as many <em>Marker</em> components as we want.</li>\n<li>There&#39;s a writable store where the children will put the name of the hovered feature. In the App component we&#39;ll just render it.</li>\n<li>I use two layers because when using one, the markers can&#39;t be detected if they are over a country. z-index is not well managed in konvas.</li>\n</ul>\n<p>The projection and D3 GeoPath are defined in their own file so they can be accessed from all the components:</p>\n<p><pre><code>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> geoPath <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>d3<span class=\"token operator\">-</span>geo<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> geoAitoff <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>d3<span class=\"token operator\">-</span>geo<span class=\"token operator\">-</span>projection<span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> projection <span class=\"token operator\">=</span> <span class=\"token function\">geoAitoff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">110</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">geoPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">projection</span><span class=\"token punctuation\">(</span>projection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></p>\n<ul>\n<li>The size and zooms are fixed. If we wanted a more complex map, we could make this a store and then chenge the values from a slider or a mouse event</li>\n</ul>\n<p>The BackgroundMap component is:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getContext<span class=\"token punctuation\">,</span> onMount <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> feature <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"topojson\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> path <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./projection'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./store.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getLayer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva_layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token function\">getLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"https://gist.githubusercontent.com/denisemauldin/a2fa29af082e85dfaf27d100be01fa47/raw/6b3a5b9b29151739964612c8a7cff23707386d84/readme-world-110m.json\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> topoData <span class=\"token operator\">=</span> <span class=\"token function\">feature</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>countries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> topoData<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">country</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> konvaPath <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n        data<span class=\"token operator\">:</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        stroke<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n            strokeWidth<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        konvaPath<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>country<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        layer<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>konvaPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        layer<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n\n</code></pre></p>\n<ul>\n<li>We can only draw when the file with the data is downloaded, so we&#39;ll put this in an <em>onMount</em> element</li>\n<li>We iterate for each country and create a Konva element for it. So we&#39;ll have hundreds of them here.</li>\n<li>Note how Konva handles the <em>mouseover</em> event.</li>\n</ul>\n<p>Finally, the markers with animation:</p>\n<p><pre><code>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> Konva <span class=\"token keyword\">from</span> <span class=\"token string\">'konva'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> projection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./projection'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./store.js'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getContext<span class=\"token punctuation\">,</span> onDestroy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> lon <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> lat <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> fill <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> markerMessage <span class=\"token operator\">=</span> <span class=\"token string\">\"Marker\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> coords <span class=\"token operator\">=</span> <span class=\"token function\">projection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>lon<span class=\"token punctuation\">,</span> lat<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getLayer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva_layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token function\">getLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> konvaPath <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Star</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        y<span class=\"token operator\">:</span> coords<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        fill<span class=\"token operator\">:</span> fill<span class=\"token punctuation\">,</span>\n            strokeWidth<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n        numPoints<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        innerRadius<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        outerRadius<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    konvaPath<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>markerMessage<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>konvaPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> angularSpeed <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> anim <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva<span class=\"token punctuation\">.</span>Animation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">frame</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> angleDiff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">.</span>timeDiff <span class=\"token operator\">*</span> angularSpeed<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        konvaPath<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>angleDiff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      anim<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    layer<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> konvaPath<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n\n</code></pre></p>\n<ul>\n<li>Very similar to the circle case, but with a Star element in this case.</li>\n<li>The animation is a rotation in this case. But the color can be changed too, the size, etc.</li>\n<li>I checked using a path instead of a star and a scale must be applied unless your icon has the proper size. Then, an animation that changes this size can&#39;t be used easily. Also, the scale is difficult to find. There&#39;s a width and height prop that isn&#39;t used.</li>\n</ul>\n<h1 id=\"conclusions\">Conclusions</h1>\n<p>I&#39;m very happy with the result. In not many hours, I could make a base for mapping in an easy way with all the Svelte capabilities. Svelte is awesome!</p>\n<h1 id=\"links\">Links</h1>\n<ul>\n<li><a href=\"https://svelte.dev/repl/75082b2a3383482d969f99b509f9b7a4?version=3.24.1\">First example</a> First example: Svelte and Konva</li>\n<li><a href=\"https://svelte.dev/repl/db922f45dff8483082e18d6555ad5b50?version=3.24.1\">Second example</a> Second example: Using components</li>\n<li><a href=\"https://svelte.dev/repl/7c3e009c6f82414aa011a313b76a5eeb?version=3.24.1\">Intermediate third example</a> Intermediate third example</li>\n<li><a href=\"https://svelte.dev/repl/8f38e2c895284c13a3e3f534d01dd171?version=3.24.1\">Third example</a> Second example: Mapping with actions and animations</li>\n<li><a href=\"https://geoexamples.com/other/2019/12/08/mapping-svelte.html\">Mapping with Svelte</a></li>\n<li><a href=\"https://konvajs.org/\">Konva web site</a></li>\n</ul>\n","tags":["konva"],"date":"2020-08-05T00:00:00.000Z"}