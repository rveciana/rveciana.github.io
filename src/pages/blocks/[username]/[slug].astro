---

import { Code } from "astro/components";

import indexData from "../../../../public/blocks/rveciana/api_result.json";
import type { Frontmatter } from "../../../model";
import type { MarkdownInstance } from "astro";

export async function getStaticPaths() {
  return indexData.map((block) => ({
    params: { username: "rveciana", slug: block.slug },
  }));
}

const { username, slug } = Astro.params;


const posts =Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>("/public/blocks/**/README.md", { eager: true }));


const indexs = import.meta.glob<string>("/public/blocks/**/index.html", { query: "?raw" , import: "default" });

const readme =
  slug &&
  username &&
  posts
    .find(
      (post) => post.file.indexOf(username) >= 0 && post.file.indexOf(slug) >= 0
    )
    ?.compiledContent();

const index =
  slug &&
  username &&
  Object.entries(indexs).find(
    (indexPage) =>
      indexPage[0].indexOf(username) >= 0 && indexPage[0].indexOf(slug) >= 0
  );

const indexContent = await (index && index[1]());

const description = indexData.find((d) => d.slug === slug)?.description;
---

<html>
  <body>
    {username} - {slug}
    <h3>{description}</h3>
    <iframe
      width={960}
      height={500}
      src={`/blocks/${username}/${slug}/index.html`}></iframe>
    <a href={`/blocks/${username}/${slug}/index.html`}
      >Open raw page in new tab</a
    >
    <div set:html={readme} />
    <Code code={indexContent ?? ""} lang="html" theme="github-light" />
  </body>
</html>

<style>
  body {
    display: flex;
    flex-direction: column;
  }
</style>
