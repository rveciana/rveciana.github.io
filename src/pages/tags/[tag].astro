---
import type { MarkdownInstance } from "astro";
import PostList from "../../components/PostList.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import type { Frontmatter } from "../../model";

interface PathProps {
 params: { tag: string };
 props: {
   page: MarkdownInstance<Frontmatter>[];
 };
}

export async function getStaticPaths(): Promise<PathProps[]> {

  const allPosts =Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>("./../*/*.m*d*", { eager: true }));

  const allTags = new Set<string>();
  allPosts.map((post) => {
    post.frontmatter.tags &&
      post.frontmatter.tags.map((tag) => allTags.add(tag));
  });
  return Array.from(allTags).map((tag) => {
    const filteredPosts = allPosts
      .filter((post) => post.frontmatter.tags?.includes(tag))
      .sort(
        (a, b) =>
          new Date(b.frontmatter.pubDate).valueOf() -
          new Date(a.frontmatter.pubDate).valueOf()
      );
    return {
      params: { tag },
      props: {
        page: filteredPosts,
      },
    };
  });
}
const { page } = Astro.props;
const { tag } = Astro.params;
let title = `Posts by Tag: ${tag}`;
---

<MainLayout
  title={title}
  description={`All GeoExamples posts that include the tag "${tag}"`}
>
  <h1>{title}</h1>
  <PostList posts={page} />
</MainLayout>
