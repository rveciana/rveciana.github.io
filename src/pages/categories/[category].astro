---
import type { MarkdownInstance } from "astro";
import PostList from "../../components/PostList.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import type { Frontmatter } from "../../model";

interface PathProps {
 params: { category: string };
 props: {
   page: MarkdownInstance<Frontmatter>[];
 };
}

export async function getStaticPaths(): Promise<PathProps[]> {

  const allPosts =Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>("./../*/*.m*d*", { eager: true }));

  const allCategories = new Set<string>();
  allPosts.map((post) => {
    post.frontmatter.categories &&
      [post.frontmatter.categories]
        .flat()
        .map((category) => allCategories.add(category));
  });

  return  Array.from(allCategories).map((category) => {
    const filteredPosts = allPosts
      .filter((post) => post.frontmatter.categories?.includes(category))
      .sort(
        (a, b) =>
          new Date(b.frontmatter.pubDate).valueOf() -
          new Date(a.frontmatter.pubDate).valueOf()
      );

    return {
      params: { category },
      props: {
        page: filteredPosts,
      },
    } as PathProps;
  });

}
const { page } = Astro.props;
const { category } = Astro.params;
let title = `Posts by Category: ${category}`;
---

<MainLayout
  title={title}
  description={`All GeoExamples posts that include the category "${category}"`}
>
  <h1>{title}</h1>
  <PostList posts={page} />
</MainLayout>
