---
import type { MarkdownInstance } from "astro";
import config from "../config.json";
import type { Frontmatter } from "../model";
import { Picture } from "astro:assets";

interface Props {
  posts: MarkdownInstance<Frontmatter>[];
}
const { posts } = Astro.props;

function formatDate(date: string) {
  return new Date(date).toUTCString().replace(/(\d\d\d\d) .*/, "$1");
}

const teaserImages: Record<string, ImageMetadata> = import.meta.glob("/src/images/teasers/*.{png,jpg,jpeg,webp}", { eager: true });
---


<section>
  <ul class="post-list">
    {
      posts.map((post) => (
        <li>
          <span class="post-meta">{formatDate(post.frontmatter.pubDate)}</span>
          <h2>
            <a class="post-link" href={post.url}>
              {post.frontmatter.title}
            </a>
          </h2>
          <a class="post-link" href={post.url}>           
              <Picture
                 src={!!post.frontmatter.teaser && teaserImages[`/src/images/teasers/${post.frontmatter.teaser}`] ?
                  teaserImages[`/src/images/teasers/${post.frontmatter.teaser}`].default
                  : 
                  teaserImages[`/src/images/teasers/${config.teaser}`].default}
                alt={post.frontmatter.title}
                widths={[400, 800, 1200]}
                sizes="(max-width: 768px) 100vw, 80vw"
                style={{   height: "auto" }}
                class="teaser"
              />
          </a>
          {post.frontmatter.categories && (
            <div class="categories">
              Categories:
              {(Array.isArray(post.frontmatter.categories)
                ? post.frontmatter.categories
                : [post.frontmatter.categories]
              ).map((category) => (
                <a href={`/categories/${category}/`}>{category}</a>
              ))}
            </div>
          )}
          {post.frontmatter.tags && (
            <div class="tags">
              Tags:
              {post.frontmatter.tags.map((tag, i, tags) => (
                <a href={`/tags/${tag}`}>
                  {i !== tags.length - 1 ? <>{tag}, </> : <>{tag}</>}
                </a>
              ))}
            </div>
          )}
        </li>
      ))
    }
  </ul>
</section>

<style lang="scss">
  @use "../css/main.scss";
  @use "../css/base.scss";
  @use "../css/layout.scss";
</style>
